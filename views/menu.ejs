<%- include("header-new") -%>

<div class="container">
    <form method="post" action="/menu">
        <div class="form-group">
            <div id="newMeal" class="row justify-content-between">
                <% meals.forEach(function(meal){ %>
                <div name="recipe" class="magnify border rounded col-lg-5 col-md-12" id="topOfRecipe">
                    <% let adjustedDate = new Date(meal.date) %>
                    <% adjustedDate.setMinutes(adjustedDate.getMinutes() + adjustedDate.getTimezoneOffset()) %>
                    <% let dDay =  getDayOfTheWeek(adjustedDate) %>
                    <% let d = convertDate(adjustedDate) %>
                    <label class="border rounded" id="deleteMe">X</label>
                    <label>Date</label>
                    <div class="row justify-content-start" id="dateBox">
                        <div class="col-7">
                            <input class="meal-date form-control" type="date" data-id="<%=meal._id%>" name="dateInput" id="date" value="<%= d %>" class="form-control">
                        </div>
                        <div class="col-5 align-self-center">
                            <label name="dayOfWeek" class="dayofWeek"> <%=dDay%> </label>
                        </div>
                    </div>
                    <label>Meal</label>
                    <textarea type="textarea" name="" value="" placeholder="Planned Meal" class="form-control meal-title"><%= meal.meal%></textarea>
                    <label> Associated Recipe</label>
                    <input list="recipes" class="form-control meal-arecipe" value="<%= meal.associateRecipe %>">
                    <datalist id="recipes">
                        <% recipes.forEach(function(recipe){ %>
                        <option value="<%= recipe.name %>">
                            <% }) %>
                    </datalist>
                    <label>Notes</label>
                    <textarea type="textarea" name="notes" value="" data-id="test123" placeholder="Notes" class="form-control last-control meal-notes"><%= meal.notes%></textarea>
                    <div class="form-check last-control">
                        <% if (meal.ingredientsPurchased == true){ %>
                        <input class="form-check-input meal-purchased" type="checkbox" value="" name="groceriesPurchased" checked>
                        <% } else { %>
                        <input class="form-check-input meal-purchased" type="checkbox" value="" name="groceriesPurchased">
                        <%}%>
                        <label class="form-check-label" for="defaultCheck1" name="groceriesPurchasedLabel">
                            Groceries Purchased
                        </label>
                    </div>

                    <button type="button" class="btn btn-secondary" name="saveButton" disabled>Save Changes</button>
                </div>
                <%})%>
                    </div>
                    <div class="container">
                        <div class="row justify-content-center">
                            <button type="button" class="btn btn-success addMeal" id="addMeal">Add a Meal</button>
                        </div>
                    </div>
                </div>
    </form>

    <!-- The Delete warning Modal -->
    <div id="deleeteWarningModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <span class="close" id="modalClose">&times;</span>
            <p>Are you sure you want to delete this meal?</p>
            <div class="row justify-content-center">
                <button class="btn btn-outline-secondary" id="yes">Yes</button>
                <button class="btn btn-outline-secondary" id="no">No</button>
            </div>
        </div>
    </div>

    <!-- The Delete warning Modal -->
    <div id="deletedModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content" id="deletedModalInner">
            <span class="close" id="modalClose">&times;</span>
            <p>This item has been deleted!</p>
        </div>
    </div>

    <script>
        /////////////////////////////////////////////
        ///// Adding Event Listeners
        /////////////////////////////////////////////
        function applyEventListeners() {
            // Adds event listeners to all of the meal forms for each day
            //////////////////////////////////////////////////////////////////////////
            let inputs = Array.from(document.getElementsByTagName("input"))
            inputs.forEach(function(input) {
                input.addEventListener('change', enableSaveButton)
            })

            let textareas = Array.from(document.getElementsByTagName("textarea"))
            textareas.forEach(textarea => {
                textarea.addEventListener('keyup', enableSaveButton)
            })

            // Adds event listeners to the buttons, in order to prompt a patch request
            //////////////////////////////////////////////////////////////////////////
            let buttons = Array.from(document.getElementsByName("saveButton"))
            buttons.forEach(button => {
                button.addEventListener('click', saveMeal)
            })

            // Adds event listeners to the checkboxes for each day
            //////////////////////////////////////////////////////////////////////////
            let checkboxes = Array.from(document.querySelectorAll("input[name=groceriesPurchased]"))
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', enableSaveButton)
            })
            // Adds an event listener to the lext right next to the check box
            //that way the user does not need to click the actual check box
            //////////////////////////////////////////////////////////////////////////
            let groceriesPurchasedLabels = Array.from(document.getElementsByName("groceriesPurchasedLabel"))
            groceriesPurchasedLabels.forEach(label => {
                label.addEventListener("click", (e) => {

                    if (e.target.previousElementSibling.checked) {
                        e.target.previousElementSibling.checked = false
                    } else {
                        e.target.previousElementSibling.checked = true
                    }
                    enableSaveButton(e)
                })
            })

            let deleteButtons = Array.from(document.getElementsByTagName("label"))
            deleteButtons.forEach(function(button) {
                if (button.innerText == "X") {
                    button.addEventListener("click", (e) => {

                        let modal = document.querySelector("#deleeteWarningModal")
                        let closeButton = document.querySelector("#modalClose")
                        let no = document.querySelector("#no")
                        let yes = document.querySelector("#yes")

                        modal.style.display = "block"
                        closeButton.onclick = () => modal.style.display = "none"
                        no.onclick = () => modal.style.display = "none"
                        yes.onclick = () => {
                            modal.style.display = "none"
                            deleteMeal(e)
                        }

                        window.onclick = function(event) {
                            if (event.target == modal) {
                                modal.style.display = "none";
                            }
                        }
                    })
                }
            })
        }
        // Clones a recipe card in order to add a new meal record.
        //////////////////////////////////////////////////////////////////////////
        document.querySelector("#addMeal").addEventListener('click', function() {
            let mealContainer = document.getElementsByName("recipe")[0].cloneNode(true)
            let destination = document.getElementById("newMeal")

            let inputs = Array.from(mealContainer.getElementsByTagName("input"))
            let textareas = Array.from(mealContainer.getElementsByTagName("textarea"))

            inputs.forEach(function(input) {
                input.value = ""
            })

            textareas.forEach(function(textarea) {
                textarea.value = ""
            })

            mealContainer.getElementsByClassName("dayofWeek")[0].textContent = ""
            mealContainer.getElementsByClassName("meal-date")[0].removeAttribute("data-id")
            mealContainer.getElementsByClassName("meal-purchased")[0].checked = false


            destination.appendChild(mealContainer)

            applyEventListeners()
        })

        applyEventListeners()

        /////////////////////////////////////////////
        ///// Event listener functions
        /////////////////////////////////////////////
        function enableSaveButton(e) {
            let button = findSpecificParentByID(e.target, "topOfRecipe").querySelector("button")
            e.target.parentElement.lastChild.previousElementSibling
            if (e.target.type == "checkbox") {
                button = e.target.parentElement.parentElement.lastChild.previousElementSibling
            }
            if (button.disabled) {
                button.disabled = false
                button.classList = "btn btn-success"
            }

            if (e.target.name == "dateInput") {
                let targetDate = new Date(e.target.value)
                targetDate.setMinutes(targetDate.getMinutes() + targetDate.getTimezoneOffset())
                let dayofWeek = getDayOfTheWeek(targetDate)
                let dateBox = findSpecificParentByID(e.target, "dateBox")
                dateBox.getElementsByTagName("label")[0].textContent = dayofWeek
            }
        }

        function saveMeal(e) {
            //Resets the meal form to the orgional values
            e.target.disabled = true
            e.target.classList = "btn btn-secondary"

            //Defines the variables
            ////////////////////////////////////////////
            let id = findSpecificParentByID(e.target, "topOfRecipe").getElementsByClassName("meal-date")[0].dataset.id
            let mealDate = findSpecificParentByID(e.target, "topOfRecipe").getElementsByClassName("meal-date")[0].value
            let mealTitle = findSpecificParentByID(e.target, "topOfRecipe").getElementsByClassName("meal-title")[0].value
            let mealAssociatedRecipe = findSpecificParentByID(e.target, "topOfRecipe").getElementsByClassName("meal-arecipe")[0].value
            let notes = findSpecificParentByID(e.target, "topOfRecipe").getElementsByClassName("meal-notes")[0].value

            if (findSpecificParentByID(e.target, "topOfRecipe").getElementsByClassName("meal-purchased")[0].checked) {
                groceriesPurchased = true
            } else {
                groceriesPurchased = false
            }

            //Encodes the informaiton to be sent
            ////////////////////////////////////////////
            var urlencoded = new URLSearchParams();
            urlencoded.append("id", id);
            urlencoded.append("date", mealDate);
            urlencoded.append("meal", mealTitle);
            urlencoded.append("associateRecipe", mealAssociatedRecipe);
            urlencoded.append("ingredientsPurchased", groceriesPurchased);
            urlencoded.append("notes", notes);

            var requestOptions = {
                method: 'POST',
                body: urlencoded,
            };

            fetch("/menu", requestOptions)
                .then(response => response.text())
                .then((data) => {
                    data = data.slice(1, data.length).slice(0, -1)
                    findSpecificParentByID(e.target, "topOfRecipe").getElementsByClassName("meal-date")[0].setAttribute("data-id", String(data))
                })
                .catch(error => console.log('error', error));
        }

        function deleteMeal(e) {
            let mealCard = findSpecificParentByID(e.target, "topOfRecipe")
            mealCard.remove()
            //Defines the variables
            ////////////////////////////////////////////
            let mealID = findSpecificParentByID(e.target, "topOfRecipe").getElementsByClassName("meal-date")[0].dataset.id
            //Encodes the informaiton to be sent
            ////////////////////////////////////////////
            var urlencoded = new URLSearchParams();
            urlencoded.append("id", mealID);


            var requestOptions = {
                method: 'DELETE',
                body: urlencoded,
            };
            async function deleteItem() {
                let results = await fetch("/menu", requestOptions)
                // .then(response => response.text())
                // .then((data)=> {alert(data)})
                // .catch(error => console.log('error', error));
                sendAlert()
            }
            deleteItem()
        }

        function sendAlert() {
            let infoPopup = document.querySelector("#deletedModal")
            let modalInner = document.querySelector("#deletedModalInner")
            infoPopup.style.display = "block"
            modalInner.style.backgroundColor = "#d4edda"
            modalInner.style.color = "#155724"

            setTimeout(()=>{
                infoPopup.style.display = "none"
            },1500)

        }
    </script>
    <%- include("footer") -%>
